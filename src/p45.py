#-*- coding: utf-8 -*-

from p import Problem

from math import sqrt

class p45(Problem):

    """
        Triangle, pentagonal, and hexagonal numbers are generated by the following formulae:

        Triangle        Tn=n(n+1)/2     1, 3, 6, 10, 15, ...
        Pentagonal      Pn=n(3n−1)/2    1, 5, 12, 22, 35, ...
        Hexagonal       Hn=n(2n−1)      1, 6, 15, 28, 45, ...
        It can be verified that T285 = P165 = H143 = 40755.

        Find the next triangle number that is also pentagonal and hexagonal.

    """


    def __is_pent(self, x):
        """
            Retourne true si x est un nombre pentagonal, false sinon

        """
        n = (sqrt(24*x + 1) + 1)/6.
        return n.is_integer()


    def __is_hexa(self, x):
        """
            Retourne true si x est un nombre hexagonal, false sinon

        """
        n = (sqrt(8*x + 1) + 1)/4.
        return n.is_integer()


    def t(self, n):
        """
            Retourne le nè nombre triangonal

        """

        return n * (n + 1) / 2


    def solve(self):
        n = 285
        while True:
            n += 1
            tn = self.t(n)
            if (self.__is_pent(tn) and self.__is_hexa(tn)):
                return tn

